definitions:
  preprocessing_sequences:
    my_preprocessing_seq:           # User-defined name of the preprocessing sequence (may contain one or more preprocessings)
    - my_new_filter:                # User-defined name of one preprocessing
      NewClonesPerRepertoireFilter: # The name of the new preprocessor class
        lower_limit: 10             # Any parameters to provide to the preprocessor.
        upper_limit: 20             # In this test example, only repertoires with 10-20 clones are kept

  datasets:
    d1:
      # if you do not have real data to test your report with, consider
      # using a randomly generated dataset, see the documentation:
      # “How to generate a random receptor or repertoire dataset”
      format: RandomSequenceDataset
        params:
          sequence_count: 5 # number of random sequences to generate
          length_probabilities:
            14: 0.8 # 80% of all generated sequences for all sequences will have length 14
            15: 0.2 # 20% of all generated sequences across all sequences will have length 15
          labels:
            epitope1: # label name
              True: 0.5 # 50% of the sequences will have class True
              False: 0.5 # 50% of the sequences will have class False
            epitope2: # next label with classes that will be assigned to sequences independently of the previous label or other parameters
              1: 0.3 # 30% of the generated sequences will have class 1
              0: 0.7 # 70% of the generated sequences will have class 0

  reports:
    simple_overview: SimpleDatasetOverview

instructions:
  exploratory_instr: # Example of specifying reports in ExploratoryAnalysis
    type: ExploratoryAnalysis
    analyses:
      analysis_1: # Example analysis with data report
        dataset: d1
        preprocessing_sequence: my_preprocessing_seq # apply the preprocessing
        report: simple_overview
