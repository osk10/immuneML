definitions:
  datasets:
    dataset:
      format: RandomSequenceDataset
      params:
        sequence_count: 5 # number of random sequences to generate
        length_probabilities:
          14: 0.8 # 80% of all generated sequences for all sequences will have length 14
          15: 0.2 # 20% of all generated sequences across all sequences will have length 15
        labels:
          epitope1: # label name
            True: 0.5 # 50% of the sequences will have class True
            False: 0.5 # 50% of the sequences will have class False
          epitope2: # next label with classes that will be assigned to sequences independently of the previous label or other parameters
            1: 0.3 # 30% of the generated sequences will have class 1
            0: 0.7 # 70% of the generated sequences will have class 0

  preprocessing_sequences: # ------- Added preprocessing -------
    my_preprocessing_seq: # User-defined name of the preprocessing sequence (may contain one or more preprocessings)
      - my_new_filter:                # User-defined name of one preprocessing
          ToolPreprocessor: # The name of the new preprocessor class
            test: "test" # Could add the name of the tool here?

  reports:
    simple_overview: SimpleDatasetOverview


instructions:
  # TODO: export data
  my_dataset_export_instruction: # user-defined instruction name
    type: DatasetExport
    datasets: # specify the dataset defined above
    - dataset
    preprocessing_sequence: my_preprocessing_seq # TODO: add the preprocessing
    export_formats:
    # only one format can be specified here and the dataset in this format will be
    # available as a Galaxy collection afterwards
    - AIRR # Can be AIRR (human-readable) or ImmuneML (recommended for further Galaxy-analysis)

# Added tool part here
tools:
  my_preprocessing_tool:
    # The user needs to specify that they want to use a tool to do the preprocessing
    # In this example we are defining a preprocessing tool that runs the dataset through Absolut
    type: PreprocessingTool
    path: "" # Tool path. This is needed to find the file that immuneML will communicate with
    # TODO: the user should add a preprocessor here. Need to figure out how to write this into it
    params:
      option: "repertoire"
      antigen: "1FBI"
      filename: "" # this is supposedly the txt file that Absolut wants, but we are sending the preprocessed file
      threads: 3

